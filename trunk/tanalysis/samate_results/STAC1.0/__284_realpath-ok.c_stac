/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

typedef unsigned long long __u_quad_t;
typedef __u_quad_t __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long __ino_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long __off_t;
typedef long __time_t;
typedef long __blksize_t;
typedef long __blkcnt_t;
struct timespec {
   __time_t tv_sec ;
   long tv_nsec ;
};
typedef __uid_t uid_t;
struct stat {
   __dev_t st_dev ;
   unsigned short __pad1 ;
   __ino_t st_ino ;
   __mode_t st_mode ;
   __nlink_t st_nlink ;
   __uid_t st_uid ;
   __gid_t st_gid ;
   __dev_t st_rdev ;
   unsigned short __pad2 ;
   __off_t st_size ;
   __blksize_t st_blksize ;
   __blkcnt_t st_blocks ;
   struct timespec st_atim ;
   struct timespec st_mtim ;
   struct timespec st_ctim ;
   unsigned long __unused4 ;
   unsigned long __unused5 ;
};
typedef unsigned int size_t;
struct __anonstruct___sigset_t_4 {
   unsigned long __val[1024U / (8U * sizeof(unsigned long ))] ;
};
typedef struct __anonstruct___sigset_t_4 __sigset_t;
typedef __sigset_t sigset_t;
extern  __attribute__((__nothrow__)) int stat(char const   * __restrict  __file ,
                                              struct stat * __restrict  __buf )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) int *__errno_location(void)  __attribute__((__const__)) ;
extern  __attribute__((__nothrow__)) char *strcpy(char * __restrict  __dest ,
                                                  char const   * __restrict  __src )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strncpy(char * __restrict  __dest ,
                                                   char const   * __restrict  __src ,
                                                   size_t __n )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strcat(char * __restrict  __dest ,
                                                  char const   * __restrict  __src )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strrchr(char const   *__s ,
                                                   int __c )  __attribute__((__pure__,
__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) size_t strlen(char const   *__s )  __attribute__((__pure__,
__nonnull__(1))) ;
extern int close(int __fd ) ;
extern  __attribute__((__nothrow__)) int chdir(char const   *__path )  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int fchdir(int __fd ) ;
extern  __attribute__((__nothrow__)) char *getcwd(char *__buf , size_t __size ) ;
extern  __attribute__((__nothrow__)) __uid_t geteuid(void) ;
extern  __attribute__((__nothrow__)) int seteuid(__uid_t __uid ) ;
extern int open(char const   *__file , int __oflag  , ...)  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int sigemptyset(sigset_t *__set )  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int sigaddset(sigset_t *__set ,
                                                   int __signo )  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int sigprocmask(int __how ,
                                                     sigset_t const   * __restrict  __set ,
                                                     sigset_t * __restrict  __oset ) ;
extern int printf(char const   * __restrict  __format  , ...) ;
char *fb_realpath(char const   *path , char *resolved ) ;
static sigset_t saved_sigmask ;
static sigset_t block_sigmask ;
static int delaying ;
static int init_done ;
static void init_mask(void) 
{ int sig ;
  
  {/*sid:1*/
  init_done = 1;
  /*sid:1*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = U*/
  /*T(sig) = U*/
  /*T(init_mask) = G(delaying) + G(saved_sigmask) + G(block_sigmask) + G(init_done)*/
  
  /*sid:2*/
  sigemptyset(& block_sigmask);
  /*sid:3*/
  sig = 1;
  /*sid:4*/
  while (sig < 65) {/*sid:8*/
    sigaddset(& block_sigmask, sig);
    /*sid:9*/
    sig ++;}
  
  /*sid:316*/
  return;
  /*sid:316*/
  /*T(init_mask) = U*/
  }

}
int enable_signaling(void) 
{ int tmp ;
  int __retres ;
  
  {/*sid:12*/
  if (delaying != 0) {/*sid:13*/
    delaying = 0;
    /*sid:14*/
    tmp = sigprocmask(2, (sigset_t const   *)(& saved_sigmask),
                      (sigset_t *)((sigset_t *)0));
    /*sid:14*/
    /*T(tmp) = G(delaying)*/
    
    /*sid:15*/
    if (tmp < 0) {/*sid:16*/
      __retres = -1;
      /*sid:16*/
      /*T(__retres) = G(delaying)*/
      
      /*sid:317*/
      goto return_label;}
    }
  
  /*sid:12*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = U*/
  /*T(enable_signaling) = G(delaying) + G(saved_sigmask) + G(block_sigmask) + G(init_done)*/
  /*T(tmp) = U*/
  
  /*sid:19*/
  __retres = 0;
  /*sid:19*/
  /*T(__retres) = G(delaying)*/
  /*T(tmp) = G(delaying)*/
  
  /*sid:318*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:318*/
  /*T(enable_signaling) = G(delaying)*/
  }

}
int delay_signaling(void) 
{ int tmp ;
  int __retres ;
  
  {/*sid:21*/
  if (init_done == 0) {/*sid:22*/
    init_mask();}
  
  /*sid:21*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = U*/
  /*T(delay_signaling) = G(delaying) + G(saved_sigmask) + G(block_sigmask) + G(init_done)*/
  /*T(tmp) = U*/
  
  /*sid:25*/
  if (delaying == 0) {/*sid:26*/
    delaying = 1;
    /*sid:27*/
    tmp = sigprocmask(0, (sigset_t const   *)(& block_sigmask),
                      (sigset_t *)(& saved_sigmask));
    /*sid:27*/
    /*T(tmp) = G(delaying)*/
    
    /*sid:28*/
    if (tmp < 0) {/*sid:29*/
      __retres = -1;
      /*sid:29*/
      /*T(__retres) = G(delaying)*/
      
      /*sid:319*/
      goto return_label;}
    }
  
  /*sid:32*/
  __retres = 0;
  /*sid:32*/
  /*T(__retres) = G(delaying)*/
  /*T(tmp) = G(delaying)*/
  
  /*sid:320*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:320*/
  /*T(delay_signaling) = G(delaying)*/
  }

}
char *wu_realpath(char const   *path , char * /*[46]*/  resolved_path ,
                  char *chroot_path ) 
{ char *ptr ;
  char q[46] ;
  size_t tmp ;
  size_t tmp_0 ;
  size_t tmp_1 ;
  size_t tmp_2 ;
  size_t tmp_3 ;
  size_t tmp_4 ;
  size_t tmp_5 ;
  char *__retres ;
  
  {/*sid:33*/
  fb_realpath(path, q);
  /*sid:33*/
  /*T(saved_sigmask) = T*/
  /*T(block_sigmask) = T*/
  /*T(delaying) = T*/
  /*T(init_done) = T*/
  /*T(__retres) = U*/
  /*T(wu_realpath) = G(delaying) + G(saved_sigmask) + G(resolved_path) + G(path) + G(chroot_path) + G(block_sigmask) + G(init_done)*/
  /*T(path) = G(path)*/
  /*T(resolved_path) = G(resolved_path)*/
  /*T(chroot_path) = G(chroot_path)*/
  /*T(ptr) = U*/
  /*T(q) = U*/
  /*T(tmp) = U*/
  /*T(tmp_0) = U*/
  /*T(tmp_1) = U*/
  /*T(tmp_2) = U*/
  /*T(tmp_3) = U*/
  /*T(tmp_4) = U*/
  /*T(tmp_5) = U*/
  
  /*sid:34*/
  tmp = strlen((char const   *)(q));
  /*sid:35*/
  printf((char const   *)"strlen(q) = %d\n", tmp);
  /*sid:35*/
  /*T(saved_sigmask) = U*/
  /*T(block_sigmask) = U*/
  /*T(delaying) = U*/
  /*T(init_done) = U*/
  
  /*sid:36*/
  printf((char const   *)"q[MAXPATHLEN - 1] = %c\n", q[46 - 1]);
  /*sid:38*/
  if (chroot_path == (void *)0)
  {/*sid:39*/
  strcpy((char *)resolved_path, (char const   *)(q));
  /*sid:39*/
  /*T(resolved_path) = U*/
  }
  else {/*sid:40*/
  strcpy((char *)resolved_path, (char const   *)chroot_path);
  /*sid:40*/
  /*T(resolved_path) = G(chroot_path)*/
  
  /*sid:42*/
  if ((int )q[0] != '/')
  {/*sid:43*/
  {/*sid:44*/
   tmp_0 = strlen((char const   *)resolved_path);
   /*sid:44*/
   /*T(tmp_0) = G(chroot_path)*/
   
   /*sid:45*/
   tmp_1 = strlen((char const   *)(q));
   /*sid:45*/
   /*T(tmp_1) = G(chroot_path)*/
   }
  /*sid:46*/
  if (tmp_0 + tmp_1 < (size_t )46)
  {/*sid:47*/
  strcat((char *)resolved_path, (char const   *)(q));}
  else {/*sid:48*/
  __retres = (char *)((void *)0);
  /*sid:48*/
  /*T(__retres) = G(chroot_path)*/
  
  /*sid:321*/
  goto return_label;}
  }
  else {/*sid:50*/
  if ((int )q[1] != '\000') {/*sid:51*/
    ptr = q;
    /*sid:51*/
    /*T(ptr) = G(chroot_path)*/
    
    /*sid:52*/
    while ((int )*ptr != '\000') {/*sid:57*/
      ptr ++;}
    
    /*sid:59*/
    if (ptr == resolved_path) {/*sid:60*/
    goto _L;}
    else {/*sid:61*/
    {/*sid:62*/
     ptr --;
     /*sid:63*/
     }
    /*sid:64*/
    if ((int )*ptr != '/')
    {/*sid:65*/
    {/*sid:66*/
     _L: /* CIL Label */ 
     tmp_2 = strlen((char const   *)resolved_path);
     /*sid:66*/
     /*T(tmp_2) = G(chroot_path)*/
     
     /*sid:67*/
     tmp_3 = strlen((char const   *)(q));
     /*sid:67*/
     /*T(tmp_3) = G(chroot_path)*/
     }
    /*sid:68*/
    if (tmp_2 + tmp_3 < (size_t )46)
    {/*sid:69*/
    strcat((char *)resolved_path, (char const   *)(q));
    /*sid:69*/
    /*T(tmp_0) = G(chroot_path)*/
    /*T(tmp_1) = G(chroot_path)*/
    }
    else {/*sid:70*/
    __retres = (char *)((void *)0);
    /*sid:70*/
    /*T(__retres) = G(chroot_path)*/
    
    /*sid:322*/
    goto return_label;}
    }
    else {/*sid:71*/
    {/*sid:72*/
     tmp_4 = strlen((char const   *)resolved_path);
     /*sid:72*/
     /*T(tmp_4) = G(chroot_path)*/
     
     /*sid:73*/
     tmp_5 = strlen((char const   *)(q));
     /*sid:73*/
     /*T(tmp_5) = G(chroot_path)*/
     }
    /*sid:74*/
    if ((tmp_4 + tmp_5) - (size_t )1 < (size_t )46)
    {/*sid:75*/
    strcat((char *)resolved_path, (char const   *)(& q[1]));
    /*sid:75*/
    /*T(tmp_0) = G(chroot_path)*/
    /*T(tmp_1) = G(chroot_path)*/
    /*T(tmp_2) = G(chroot_path)*/
    /*T(tmp_3) = G(chroot_path)*/
    }
    else {/*sid:76*/
    __retres = (char *)((void *)0);
    /*sid:76*/
    /*T(__retres) = G(chroot_path)*/
    
    /*sid:323*/
    goto return_label;}
    }
    }
    }
  }
  }
  
  /*sid:78*/
  __retres = (char *)resolved_path;
  /*sid:78*/
  /*T(__retres) = G(chroot_path)*/
  /*T(resolved_path) = G(chroot_path)*/
  /*T(ptr) = G(chroot_path)*/
  /*T(tmp_0) = G(chroot_path)*/
  /*T(tmp_1) = G(chroot_path)*/
  /*T(tmp_2) = G(chroot_path)*/
  /*T(tmp_3) = G(chroot_path)*/
  /*T(tmp_4) = G(chroot_path)*/
  /*T(tmp_5) = G(chroot_path)*/
  
  /*sid:324*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:324*/
  /*T(wu_realpath) = G(chroot_path)*/
  /*T(ptr) = G(chroot_path)*/
  /*T(tmp_0) = G(chroot_path)*/
  /*T(tmp_1) = G(chroot_path)*/
  /*T(tmp_2) = G(chroot_path)*/
  /*T(tmp_3) = G(chroot_path)*/
  /*T(tmp_4) = G(chroot_path)*/
  /*T(tmp_5) = G(chroot_path)*/
  }

}
char *fb_realpath(char const   *path , char *resolved ) 
{ struct stat sb ;
  int fd ;
  int rootd ;
  int serrno ;
  char *p ;
  char *q ;
  char wbuf[46] ;
  int resultcode ;
  int *tmp ;
  uid_t userid ;
  int *tmp_1 ;
  int *tmp_2 ;
  uid_t userid_0 ;
  int *tmp_4 ;
  int *tmp_5 ;
  int *tmp_6 ;
  uid_t userid_1 ;
  int *tmp_8 ;
  int *tmp_9 ;
  int *tmp_10 ;
  uid_t userid_2 ;
  int *tmp_12 ;
  int *tmp_13 ;
  int *tmp_14 ;
  char *tmp_16 ;
  uid_t userid_3 ;
  int *tmp_18 ;
  char *tmp_20 ;
  int *tmp_21 ;
  size_t tmp_22 ;
  size_t tmp_23 ;
  int *tmp_24 ;
  size_t tmp_25 ;
  size_t tmp_26 ;
  size_t tmp_27 ;
  int *tmp_28 ;
  uid_t userid_4 ;
  int *tmp_30 ;
  int *tmp_31 ;
  int *tmp_32 ;
  int *tmp_33 ;
  uid_t userid_5 ;
  int *tmp_35 ;
  int *tmp_36 ;
  char *__retres ;
  
  {/*sid:79*/
  {/*sid:80*/
   tmp = __errno_location();
   /*sid:81*/
   *tmp = 0;}
  /*sid:79*/
  /*T(tmp_26) = U*/
  /*T(tmp_27) = U*/
  /*T(tmp_28) = U*/
  /*T(userid_4) = U*/
  /*T(tmp_30) = U*/
  /*T(tmp_31) = U*/
  /*T(tmp_32) = U*/
  /*T(tmp_33) = U*/
  /*T(userid_5) = U*/
  /*T(tmp_35) = U*/
  /*T(tmp_36) = U*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = U*/
  /*T(fb_realpath) = G(delaying) + G(saved_sigmask) + G(path) + G(resolved) + G(block_sigmask) + G(init_done)*/
  /*T(path) = G(path)*/
  /*T(resolved) = G(resolved)*/
  /*T(sb) = U*/
  /*T(fd) = U*/
  /*T(rootd) = U*/
  /*T(serrno) = U*/
  /*T(p) = U*/
  /*T(q) = U*/
  /*T(wbuf) = U*/
  /*T(resultcode) = U*/
  /*T(tmp) = U*/
  /*T(userid) = U*/
  /*T(tmp_1) = U*/
  /*T(tmp_2) = U*/
  /*T(userid_0) = U*/
  /*T(tmp_4) = U*/
  /*T(tmp_5) = U*/
  /*T(tmp_6) = U*/
  /*T(userid_1) = U*/
  /*T(tmp_8) = U*/
  /*T(tmp_9) = U*/
  /*T(tmp_10) = U*/
  /*T(userid_2) = U*/
  /*T(tmp_12) = U*/
  /*T(tmp_13) = U*/
  /*T(tmp_14) = U*/
  /*T(tmp_16) = U*/
  /*T(userid_3) = U*/
  /*T(tmp_18) = U*/
  /*T(tmp_20) = U*/
  /*T(tmp_21) = U*/
  /*T(tmp_22) = U*/
  /*T(tmp_23) = U*/
  /*T(tmp_24) = U*/
  /*T(tmp_25) = U*/
  
  /*sid:82*/
  fd = open(".", 0);
  /*sid:83*/
  {/*sid:84*/
   tmp_1 = __errno_location();
   /*sid:85*/
   }
  /*sid:86*/
  if (13 == *tmp_1) {/*sid:87*/
    userid = geteuid();
    /*sid:88*/
    delay_signaling();
    /*sid:89*/
    seteuid(0U);
    /*sid:90*/
    fd = open(".", 0);
    /*sid:91*/
    seteuid(userid);
    /*sid:92*/
    enable_signaling();}
  
  /*sid:95*/
  if (fd < 0) {/*sid:96*/
    strcpy((char *)resolved, (char const   *)".");
    /*sid:96*/
    /*T(resolved) = U*/
    
    /*sid:97*/
    __retres = (char *)((void *)0);
    /*sid:325*/
    goto return_label;}
  
  /*sid:99*/
  strncpy((char *)resolved, (char const   *)path, (unsigned int )(46 - 1));
  /*sid:100*/
  *(resolved + (46 - 1)) = (char )'\000';
  /*sid:101*/
  printf((char const   *)"Before loop resolved = %s\n", resolved);
  /*sid:101*/
  /*T(saved_sigmask) = G(resolved)*/
  /*T(block_sigmask) = G(resolved)*/
  /*T(delaying) = G(resolved)*/
  /*T(init_done) = G(resolved)*/
  
  /*sid:102*/
  q = strrchr((char const   *)resolved, '/');
  /*sid:102*/
  /*T(q) = G(resolved)*/
  
  /*sid:104*/
  if (q != (void *)0)
  {/*sid:105*/
  p = q + 1;
  /*sid:105*/
  /*T(p) = G(resolved)*/
  
  /*sid:107*/
  if (q == resolved) {/*sid:108*/
  q = (char *)"/";}
  else {/*sid:109*/
  while (1) {/*sid:110*/
    q --;
    /*sid:112*/
    if (q > resolved)
    {/*sid:114*/
    if (! ((int )*q == '/')) {/*sid:115*/
      break;}
    }
    else {/*sid:116*/
    break;}
    }
  
  /*sid:117*/
  *(q + 1) = (char )'\000';
  /*sid:118*/
  q = resolved;}
  
  /*sid:119*/
  printf((char const   *)"now resolved = %s\n", resolved);
  /*sid:120*/
  {/*sid:121*/
   tmp_2 = __errno_location();
   /*sid:121*/
   /*T(tmp_2) = G(resolved)*/
   
   /*sid:122*/
   *tmp_2 = 0;}
  /*sid:123*/
  resultcode = chdir((char const   *)q);
  /*sid:123*/
  /*T(resultcode) = G(resolved)*/
  
  /*sid:124*/
  printf((char const   *)"result of chdir(%s) = %d\n", q, resultcode);
  /*sid:125*/
  {/*sid:126*/
   tmp_5 = __errno_location();
   /*sid:126*/
   /*T(tmp_5) = G(resolved)*/
   
   /*sid:127*/
   }
  /*sid:128*/
  if (13 == *tmp_5) {/*sid:129*/
    userid_0 = geteuid();
    /*sid:129*/
    /*T(userid_0) = G(resolved)*/
    
    /*sid:130*/
    delay_signaling();
    /*sid:131*/
    seteuid(0U);
    /*sid:132*/
    {/*sid:133*/
     tmp_4 = __errno_location();
     /*sid:133*/
     /*T(tmp_4) = G(resolved)*/
     
     /*sid:134*/
     *tmp_4 = 0;}
    /*sid:135*/
    resultcode = chdir((char const   *)q);
    /*sid:136*/
    seteuid(userid_0);
    /*sid:137*/
    enable_signaling();}
  
  /*sid:140*/
  if (resultcode < 0) {/*sid:141*/
    printf((char const   *)"Going to err1..\n");
    /*sid:142*/
    goto err1;}
  
  /*sid:140*/
  /*T(userid_0) = G(resolved)*/
  /*T(tmp_4) = G(resolved)*/
  }
  else {/*sid:144*/
  p = resolved;
  /*sid:144*/
  /*T(p) = G(resolved)*/
  /*T(resultcode) = G(resolved)*/
  /*T(tmp_2) = G(resolved)*/
  /*T(userid_0) = G(resolved)*/
  /*T(tmp_4) = G(resolved)*/
  /*T(tmp_5) = G(resolved)*/
  }
  
  /*sid:145*/
  printf((char const   *)"Dealing with p = %s\n", p);
  /*sid:147*/
  if ((int )*p != '\000') {/*sid:148*/
    {/*sid:149*/
     tmp_6 = __errno_location();
     /*sid:149*/
     /*T(tmp_6) = G(resolved)*/
     
     /*sid:150*/
     *tmp_6 = 0;}
    /*sid:151*/
    resultcode = stat((char const   *)p, (struct stat *)(& sb));
    /*sid:152*/
    printf((char const   *)"lstat(%s, &sb) = %d\n", p, resultcode);
    /*sid:153*/
    {/*sid:154*/
     tmp_9 = __errno_location();
     /*sid:154*/
     /*T(tmp_9) = G(resolved)*/
     
     /*sid:155*/
     }
    /*sid:156*/
    if (13 == *tmp_9) {/*sid:157*/
      userid_1 = geteuid();
      /*sid:157*/
      /*T(userid_1) = G(resolved)*/
      
      /*sid:158*/
      delay_signaling();
      /*sid:159*/
      seteuid(0U);
      /*sid:160*/
      {/*sid:161*/
       tmp_8 = __errno_location();
       /*sid:161*/
       /*T(tmp_8) = G(resolved)*/
       
       /*sid:162*/
       *tmp_8 = 0;}
      /*sid:163*/
      resultcode = stat((char const   *)p, (struct stat *)(& sb));
      /*sid:164*/
      seteuid(userid_1);
      /*sid:165*/
      enable_signaling();}
    
    /*sid:168*/
    if (resultcode == 0) {/*sid:170*/
      if ((sb.st_mode & 61440U) == 16384U) {/*sid:171*/
        {/*sid:172*/
         tmp_10 = __errno_location();
         /*sid:172*/
         /*T(tmp_10) = G(resolved)*/
         
         /*sid:173*/
         *tmp_10 = 0;}
        /*sid:174*/
        resultcode = chdir((char const   *)p);
        /*sid:175*/
        printf((char const   *)"changed dir to %s\n", p);
        /*sid:176*/
        printf((char const   *)"resultcode = %d\n", resultcode);
        /*sid:177*/
        {/*sid:178*/
         tmp_13 = __errno_location();
         /*sid:178*/
         /*T(tmp_13) = G(resolved)*/
         
         /*sid:179*/
         }
        /*sid:180*/
        if (13 == *tmp_13) {/*sid:181*/
          userid_2 = geteuid();
          /*sid:181*/
          /*T(userid_2) = G(resolved)*/
          
          /*sid:182*/
          printf((char const   *)"had an access error while chdir\'ing to %s\n",
                 p);
          /*sid:183*/
          delay_signaling();
          /*sid:184*/
          seteuid(0U);
          /*sid:185*/
          {/*sid:186*/
           tmp_12 = __errno_location();
           /*sid:186*/
           /*T(tmp_12) = G(resolved)*/
           
           /*sid:187*/
           *tmp_12 = 0;}
          /*sid:188*/
          resultcode = chdir((char const   *)p);
          /*sid:189*/
          seteuid(userid_2);
          /*sid:190*/
          enable_signaling();}
        
        /*sid:193*/
        if (resultcode < 0) {/*sid:194*/
          printf((char const   *)"resultcode = %d in S_ISDIR\n", resultcode);
          /*sid:195*/
          goto err1;}
        
        /*sid:193*/
        /*T(userid_2) = G(resolved)*/
        /*T(tmp_12) = G(resolved)*/
        
        /*sid:197*/
        p = (char *)"";}
      }
    
    /*sid:168*/
    /*T(userid_1) = G(resolved)*/
    /*T(tmp_8) = G(resolved)*/
    }
  
  /*sid:201*/
  strcpy((char *)(wbuf), (char const   *)p);
  /*sid:201*/
  /*T(wbuf) = G(resolved)*/
  /*T(tmp_6) = G(resolved)*/
  /*T(userid_1) = G(resolved)*/
  /*T(tmp_8) = G(resolved)*/
  /*T(tmp_9) = G(resolved)*/
  /*T(tmp_10) = G(resolved)*/
  /*T(userid_2) = G(resolved)*/
  /*T(tmp_12) = G(resolved)*/
  /*T(tmp_13) = G(resolved)*/
  
  /*sid:202*/
  printf((char const   *)"wbuf = %s\n", wbuf);
  /*sid:203*/
  {/*sid:204*/
   tmp_14 = __errno_location();
   /*sid:204*/
   /*T(tmp_14) = G(resolved)*/
   
   /*sid:205*/
   *tmp_14 = 0;}
  /*sid:206*/
  tmp_16 = getcwd(resolved, 46U);
  /*sid:206*/
  /*T(tmp_16) = T*/
  
  /*sid:207*/
  if (tmp_16 == (void *)0)
  {/*sid:208*/
  resultcode = 0;
  /*sid:208*/
  /*T(resultcode) = T*/
  }
  else {/*sid:209*/
  resultcode = 1;
  /*sid:209*/
  /*T(resultcode) = T*/
  }
  
  /*sid:210*/
  printf((char const   *)"getcwd yields resolved = %s\n", resolved);
  /*sid:211*/
  {/*sid:212*/
   tmp_21 = __errno_location();
   /*sid:212*/
   /*T(tmp_21) = G(resolved)*/
   
   /*sid:213*/
   }
  /*sid:214*/
  if (13 == *tmp_21) {/*sid:215*/
    userid_3 = geteuid();
    /*sid:215*/
    /*T(userid_3) = G(resolved)*/
    
    /*sid:216*/
    delay_signaling();
    /*sid:217*/
    seteuid(0U);
    /*sid:218*/
    {/*sid:219*/
     tmp_18 = __errno_location();
     /*sid:219*/
     /*T(tmp_18) = G(resolved)*/
     
     /*sid:220*/
     *tmp_18 = 0;}
    /*sid:221*/
    tmp_20 = getcwd(resolved, 46U);
    /*sid:221*/
    /*T(tmp_20) = T*/
    
    /*sid:222*/
    if (tmp_20 == (void *)0) {/*sid:223*/
    resultcode = 0;}
    else {/*sid:224*/
    resultcode = 1;}
    
    /*sid:225*/
    printf((char const   *)"getcwd gives resultcode = %d\n", resultcode);
    /*sid:225*/
    /*T(saved_sigmask) = T*/
    /*T(block_sigmask) = T*/
    /*T(delaying) = T*/
    /*T(init_done) = T*/
    
    /*sid:226*/
    seteuid(userid_3);
    /*sid:227*/
    enable_signaling();}
  
  /*sid:230*/
  if (resultcode == 0) {/*sid:231*/
    printf((char const   *)"resultcode was 0, going to err1\n");
    /*sid:232*/
    goto err1;}
  
  /*sid:230*/
  /*T(saved_sigmask) = T*/
  /*T(block_sigmask) = T*/
  /*T(delaying) = T*/
  /*T(init_done) = T*/
  /*T(userid_3) = G(resolved)*/
  /*T(tmp_18) = G(resolved)*/
  /*T(tmp_20) = T*/
  
  /*sid:235*/
  if ((int )*(resolved + 0) == '/')
  {/*sid:237*/
  if ((int )*(resolved + 1) == '\000')
  {/*sid:238*/
  printf((char const   *)"rootd = 1\n");
  /*sid:239*/
  rootd = 1;
  /*sid:239*/
  /*T(rootd) = T*/
  }
  else {/*sid:240*/
  printf((char const   *)"rootd = 0\n");
  /*sid:241*/
  rootd = 0;
  /*sid:241*/
  /*T(rootd) = T*/
  }
  }
  else {/*sid:242*/
  printf((char const   *)"rootd = 0\n");
  /*sid:243*/
  rootd = 0;
  /*sid:243*/
  /*T(rootd) = T*/
  }
  
  /*sid:244*/
  {/*sid:245*/
   tmp_22 = strlen((char const   *)resolved);
   /*sid:245*/
   /*T(tmp_22) = T*/
   
   /*sid:246*/
   tmp_23 = strlen((char const   *)(wbuf));
   /*sid:246*/
   /*T(tmp_23) = T*/
   }
  /*sid:247*/
  printf((char const   *)"strlen(resolved) + strlen(wbuf) + rootd + 1 = %d\n",
         ((tmp_22 + tmp_23) + (size_t )rootd) + (size_t )1);
  /*sid:249*/
  if (wbuf[0]) {/*sid:250*/
    {/*sid:251*/
     tmp_25 = strlen((char const   *)resolved);
     /*sid:251*/
     /*T(tmp_25) = T*/
     
     /*sid:252*/
     tmp_26 = strlen((char const   *)(wbuf));
     /*sid:252*/
     /*T(tmp_26) = T*/
     
     /*sid:253*/
     }
    /*sid:254*/
    if (((tmp_25 + tmp_26) + (size_t )rootd) + (size_t )1 >= (size_t )46) {/*sid:255*/
      {/*sid:256*/
       tmp_24 = __errno_location();
       /*sid:256*/
       /*T(tmp_24) = T*/
       
       /*sid:257*/
       *tmp_24 = 36;}
      /*sid:258*/
      printf((char const   *)"resolved path too long!\n");
      /*sid:259*/
      goto err1;}
    
    /*sid:262*/
    if (rootd == 0) {/*sid:263*/
      strcat((char *)resolved, (char const   *)"/");}
    
    /*sid:265*/
    strcat((char *)resolved, (char const   *)(wbuf));
    /*sid:266*/
    tmp_27 = strlen((char const   *)resolved);
    /*sid:266*/
    /*T(tmp_27) = T*/
    
    /*sid:267*/
    printf((char const   *)"after strcat, resolved = %s, strlen(resolved) = %d\n",
           resolved, tmp_27);}
  
  /*sid:269*/
  {/*sid:270*/
   tmp_28 = __errno_location();
   /*sid:270*/
   /*T(tmp_28) = T*/
   
   /*sid:271*/
   *tmp_28 = 0;}
  /*sid:269*/
  /*T(tmp_26) = T*/
  /*T(tmp_27) = T*/
  /*T(tmp_25) = T*/
  
  /*sid:272*/
  resultcode = fchdir(fd);
  /*sid:273*/
  {/*sid:274*/
   tmp_31 = __errno_location();
   /*sid:274*/
   /*T(tmp_31) = T*/
   
   /*sid:275*/
   }
  /*sid:276*/
  if (13 == *tmp_31) {/*sid:277*/
    userid_4 = geteuid();
    /*sid:277*/
    /*T(userid_4) = T*/
    
    /*sid:278*/
    delay_signaling();
    /*sid:279*/
    seteuid(0U);
    /*sid:280*/
    {/*sid:281*/
     tmp_30 = __errno_location();
     /*sid:281*/
     /*T(tmp_30) = T*/
     
     /*sid:282*/
     *tmp_30 = 0;}
    /*sid:283*/
    resultcode = fchdir(fd);
    /*sid:284*/
    seteuid(userid_4);
    /*sid:285*/
    enable_signaling();}
  
  /*sid:288*/
  if (resultcode < 0) {/*sid:289*/
    tmp_32 = __errno_location();
    /*sid:289*/
    /*T(tmp_32) = T*/
    
    /*sid:290*/
    serrno = *tmp_32;
    /*sid:290*/
    /*T(serrno) = T*/
    
    /*sid:291*/
    goto err2;}
  
  /*sid:288*/
  /*T(userid_4) = T*/
  /*T(tmp_30) = T*/
  
  /*sid:293*/
  close(fd);
  /*sid:294*/
  __retres = resolved;
  /*sid:294*/
  /*T(__retres) = T*/
  
  /*sid:326*/
  goto return_label;
  /*sid:295*/
  err1: 
  tmp_33 = __errno_location();
  /*sid:295*/
  /*T(tmp_26) = T*/
  /*T(tmp_33) = T*/
  /*T(saved_sigmask) = T*/
  /*T(block_sigmask) = T*/
  /*T(delaying) = T*/
  /*T(init_done) = T*/
  /*T(rootd) = T*/
  /*T(wbuf) = G(resolved)*/
  /*T(resultcode) = T*/
  /*T(tmp_6) = G(resolved)*/
  /*T(userid_1) = G(resolved)*/
  /*T(tmp_8) = G(resolved)*/
  /*T(tmp_9) = G(resolved)*/
  /*T(tmp_10) = G(resolved)*/
  /*T(userid_2) = G(resolved)*/
  /*T(tmp_12) = G(resolved)*/
  /*T(tmp_13) = G(resolved)*/
  /*T(tmp_14) = G(resolved)*/
  /*T(tmp_16) = T*/
  /*T(userid_3) = G(resolved)*/
  /*T(tmp_18) = G(resolved)*/
  /*T(tmp_20) = T*/
  /*T(tmp_21) = G(resolved)*/
  /*T(tmp_22) = T*/
  /*T(tmp_23) = T*/
  /*T(tmp_24) = T*/
  /*T(tmp_25) = T*/
  
  /*sid:296*/
  serrno = *tmp_33;
  /*sid:296*/
  /*T(serrno) = T*/
  
  /*sid:297*/
  fchdir(fd);
  /*sid:298*/
  printf((char const   *)"fchdir(fd) completed\n");
  /*sid:299*/
  {/*sid:300*/
   tmp_35 = __errno_location();
   /*sid:300*/
   /*T(tmp_35) = T*/
   
   /*sid:301*/
   }
  /*sid:302*/
  if (13 == *tmp_35) {/*sid:303*/
    userid_5 = geteuid();
    /*sid:303*/
    /*T(userid_5) = T*/
    
    /*sid:304*/
    delay_signaling();
    /*sid:305*/
    seteuid(0U);
    /*sid:306*/
    fchdir(fd);
    /*sid:307*/
    seteuid(userid_5);
    /*sid:308*/
    enable_signaling();
    /*sid:308*/
    /*T(tmp_27) = T*/
    /*T(tmp_28) = T*/
    /*T(userid_4) = T*/
    /*T(tmp_30) = T*/
    /*T(tmp_31) = T*/
    /*T(tmp_32) = T*/
    }
  
  /*sid:310*/
  err2: ;
  /*sid:310*/
  /*T(tmp_27) = T*/
  /*T(tmp_28) = T*/
  /*T(userid_4) = T*/
  /*T(tmp_30) = T*/
  /*T(tmp_31) = T*/
  /*T(tmp_32) = T*/
  /*T(tmp_33) = T*/
  /*T(userid_5) = T*/
  /*T(tmp_35) = T*/
  /*T(tmp_24) = T*/
  
  /*sid:311*/
  close(fd);
  /*sid:312*/
  {/*sid:313*/
   tmp_36 = __errno_location();
   /*sid:313*/
   /*T(tmp_36) = T*/
   
   /*sid:314*/
   *tmp_36 = serrno;}
  /*sid:315*/
  __retres = (char *)((void *)0);
  /*sid:315*/
  /*T(__retres) = T*/
  
  /*sid:327*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:327*/
  /*T(tmp_26) = T*/
  /*T(tmp_27) = T*/
  /*T(tmp_28) = T*/
  /*T(userid_4) = T*/
  /*T(tmp_30) = T*/
  /*T(tmp_31) = T*/
  /*T(tmp_32) = T*/
  /*T(tmp_33) = T*/
  /*T(userid_5) = T*/
  /*T(tmp_35) = T*/
  /*T(tmp_36) = T*/
  /*T(saved_sigmask) = T*/
  /*T(block_sigmask) = T*/
  /*T(delaying) = T*/
  /*T(init_done) = T*/
  /*T(__retres) = T*/
  /*T(fb_realpath) = T*/
  /*T(resolved) = G(resolved)*/
  /*T(rootd) = T*/
  /*T(serrno) = T*/
  /*T(p) = G(resolved)*/
  /*T(q) = G(resolved)*/
  /*T(wbuf) = G(resolved)*/
  /*T(resultcode) = T*/
  /*T(tmp_2) = G(resolved)*/
  /*T(userid_0) = G(resolved)*/
  /*T(tmp_4) = G(resolved)*/
  /*T(tmp_5) = G(resolved)*/
  /*T(tmp_6) = G(resolved)*/
  /*T(userid_1) = G(resolved)*/
  /*T(tmp_8) = G(resolved)*/
  /*T(tmp_9) = G(resolved)*/
  /*T(tmp_10) = G(resolved)*/
  /*T(userid_2) = G(resolved)*/
  /*T(tmp_12) = G(resolved)*/
  /*T(tmp_13) = G(resolved)*/
  /*T(tmp_14) = G(resolved)*/
  /*T(tmp_16) = T*/
  /*T(userid_3) = G(resolved)*/
  /*T(tmp_18) = G(resolved)*/
  /*T(tmp_20) = T*/
  /*T(tmp_21) = G(resolved)*/
  /*T(tmp_22) = T*/
  /*T(tmp_23) = T*/
  /*T(tmp_24) = T*/
  /*T(tmp_25) = T*/
  }

}
