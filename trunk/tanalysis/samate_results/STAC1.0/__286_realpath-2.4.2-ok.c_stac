/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

typedef unsigned int size_t;
typedef unsigned long long __u_quad_t;
typedef __u_quad_t __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long __ino_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long __off_t;
typedef long __time_t;
typedef long __blksize_t;
typedef long __blkcnt_t;
typedef __uid_t uid_t;
struct __anonstruct___sigset_t_8 {
   unsigned long __val[1024U / (8U * sizeof(unsigned long ))] ;
};
typedef struct __anonstruct___sigset_t_8 __sigset_t;
typedef __sigset_t sigset_t;
struct timespec {
   __time_t tv_sec ;
   long tv_nsec ;
};
struct stat {
   __dev_t st_dev ;
   unsigned short __pad1 ;
   __ino_t st_ino ;
   __mode_t st_mode ;
   __nlink_t st_nlink ;
   __uid_t st_uid ;
   __gid_t st_gid ;
   __dev_t st_rdev ;
   unsigned short __pad2 ;
   __off_t st_size ;
   __blksize_t st_blksize ;
   __blkcnt_t st_blocks ;
   struct timespec st_atim ;
   struct timespec st_mtim ;
   struct timespec st_ctim ;
   unsigned long __unused4 ;
   unsigned long __unused5 ;
};
extern int printf(char const   * __restrict  __format  , ...) ;
extern  __attribute__((__nothrow__)) char *strcpy(char * __restrict  __dest ,
                                                  char const   * __restrict  __src )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strncpy(char * __restrict  __dest ,
                                                   char const   * __restrict  __src ,
                                                   size_t __n )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strcat(char * __restrict  __dest ,
                                                  char const   * __restrict  __src )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strncat(char * __restrict  __dest ,
                                                   char const   * __restrict  __src ,
                                                   size_t __n )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) int strcmp(char const   *__s1 ,
                                                char const   *__s2 )  __attribute__((__pure__,
__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) int strncmp(char const   *__s1 ,
                                                 char const   *__s2 ,
                                                 size_t __n )  __attribute__((__pure__,
__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) char *strchr(char const   *__s , int __c )  __attribute__((__pure__,
__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) size_t strlen(char const   *__s )  __attribute__((__pure__,
__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) char *getcwd(char *__buf , size_t __size ) ;
extern  __attribute__((__nothrow__)) __uid_t geteuid(void) ;
extern  __attribute__((__nothrow__)) int seteuid(__uid_t __uid ) ;
extern  __attribute__((__nothrow__)) int sigemptyset(sigset_t *__set )  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int sigaddset(sigset_t *__set ,
                                                   int __signo )  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int sigprocmask(int __how ,
                                                     sigset_t const   * __restrict  __set ,
                                                     sigset_t * __restrict  __oset ) ;
extern  __attribute__((__nothrow__)) int stat(char const   * __restrict  __file ,
                                              struct stat * __restrict  __buf )  __attribute__((__nonnull__(1,2))) ;
static sigset_t saved_sigmask ;
static sigset_t block_sigmask ;
static int delaying ;
static int init_done ;
static void init_mask(void) 
{ int sig ;
  
  {/*sid:1*/
  init_done = 1;
  /*sid:1*/
  /*T(init_mask) = G(delaying) + G(saved_sigmask) + G(block_sigmask) + G(init_done)*/
  /*T(sig) = U*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = U*/
  
  /*sid:2*/
  sigemptyset(& block_sigmask);
  /*sid:3*/
  sig = 1;
  /*sid:4*/
  while (sig < 65) {/*sid:8*/
    sigaddset(& block_sigmask, sig);
    /*sid:9*/
    sig ++;}
  
  /*sid:357*/
  return;
  /*sid:357*/
  /*T(init_mask) = U*/
  }

}
int enable_signaling(void) 
{ int tmp ;
  int __retres ;
  
  {/*sid:12*/
  if (delaying != 0) {/*sid:13*/
    delaying = 0;
    /*sid:14*/
    tmp = sigprocmask(2, (sigset_t const   *)(& saved_sigmask),
                      (sigset_t *)((sigset_t *)0));
    /*sid:14*/
    /*T(tmp) = G(delaying)*/
    
    /*sid:15*/
    if (tmp < 0) {/*sid:16*/
      __retres = -1;
      /*sid:16*/
      /*T(__retres) = G(delaying)*/
      
      /*sid:358*/
      goto return_label;}
    }
  
  /*sid:12*/
  /*T(enable_signaling) = G(delaying) + G(saved_sigmask) + G(block_sigmask) + G(init_done)*/
  /*T(tmp) = U*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = U*/
  
  /*sid:19*/
  __retres = 0;
  /*sid:19*/
  /*T(tmp) = G(delaying)*/
  /*T(__retres) = G(delaying)*/
  
  /*sid:359*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:359*/
  /*T(enable_signaling) = G(delaying)*/
  }

}
int delay_signaling(void) 
{ int tmp ;
  int __retres ;
  
  {/*sid:21*/
  if (init_done == 0) {/*sid:22*/
    init_mask();}
  
  /*sid:21*/
  /*T(delay_signaling) = G(delaying) + G(saved_sigmask) + G(block_sigmask) + G(init_done)*/
  /*T(tmp) = U*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = U*/
  
  /*sid:25*/
  if (delaying == 0) {/*sid:26*/
    delaying = 1;
    /*sid:27*/
    tmp = sigprocmask(0, (sigset_t const   *)(& block_sigmask),
                      (sigset_t *)(& saved_sigmask));
    /*sid:27*/
    /*T(tmp) = G(delaying)*/
    
    /*sid:28*/
    if (tmp < 0) {/*sid:29*/
      __retres = -1;
      /*sid:29*/
      /*T(__retres) = G(delaying)*/
      
      /*sid:360*/
      goto return_label;}
    }
  
  /*sid:32*/
  __retres = 0;
  /*sid:32*/
  /*T(tmp) = G(delaying)*/
  /*T(__retres) = G(delaying)*/
  
  /*sid:361*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:361*/
  /*T(delay_signaling) = G(delaying)*/
  }

}
char *my_realpath(char const   *pathname , char *result , char *chroot_path ) 
{ struct stat sbuf ;
  char canary[5] ;
  char curpath[46] ;
  char workpath[46] ;
  char namebuf[46] ;
  char *where ;
  char *ptr ;
  char *last ;
  uid_t userid ;
  int resultcode ;
  uid_t userid_0 ;
  char *tmp ;
  char *tmp_0 ;
  int tmp_1 ;
  int tmp_2 ;
  int tmp_3 ;
  size_t tmp_4 ;
  size_t tmp_5 ;
  size_t tmp_6 ;
  size_t tmp_7 ;
  size_t tmp_8 ;
  size_t tmp_9 ;
  size_t tmp_10 ;
  size_t tmp_11 ;
  size_t tmp_12 ;
  size_t tmp_13 ;
  size_t tmp_14 ;
  size_t tmp_15 ;
  size_t tmp_16 ;
  size_t tmp_17 ;
  size_t tmp_18 ;
  size_t tmp_19 ;
  size_t tmp_20 ;
  size_t tmp_21 ;
  size_t tmp_22 ;
  size_t tmp_23 ;
  size_t tmp_24 ;
  size_t tmp_25 ;
  size_t tmp_26 ;
  size_t tmp_27 ;
  size_t tmp_28 ;
  size_t tmp_29 ;
  size_t tmp_30 ;
  size_t tmp_31 ;
  size_t tmp_32 ;
  size_t tmp_33 ;
  size_t tmp_34 ;
  size_t tmp_35 ;
  char *__retres ;
  
  {/*sid:33*/
  canary[0] = (char )'G';
  /*sid:33*/
  /*T(my_realpath) = G(delaying) + G(saved_sigmask) + G(result) + G(pathname) + G(chroot_path) + G(block_sigmask) + G(init_done)*/
  /*T(pathname) = G(pathname)*/
  /*T(result) = G(result)*/
  /*T(chroot_path) = G(chroot_path)*/
  /*T(sbuf) = U*/
  /*T(canary) = U*/
  /*T(curpath) = U*/
  /*T(workpath) = U*/
  /*T(namebuf) = U*/
  /*T(where) = U*/
  /*T(ptr) = U*/
  /*T(last) = U*/
  /*T(userid) = U*/
  /*T(resultcode) = U*/
  /*T(userid_0) = U*/
  /*T(tmp) = U*/
  /*T(tmp_0) = U*/
  /*T(tmp_1) = U*/
  /*T(tmp_2) = U*/
  /*T(tmp_3) = U*/
  /*T(tmp_4) = U*/
  /*T(tmp_5) = U*/
  /*T(tmp_6) = U*/
  /*T(tmp_7) = U*/
  /*T(tmp_8) = U*/
  /*T(tmp_9) = U*/
  /*T(tmp_10) = U*/
  /*T(tmp_11) = U*/
  /*T(tmp_12) = U*/
  /*T(tmp_13) = U*/
  /*T(tmp_14) = U*/
  /*T(tmp_15) = U*/
  /*T(tmp_16) = U*/
  /*T(tmp_17) = U*/
  /*T(tmp_18) = U*/
  /*T(tmp_19) = U*/
  /*T(tmp_20) = U*/
  /*T(tmp_21) = U*/
  /*T(tmp_22) = U*/
  /*T(tmp_23) = U*/
  /*T(tmp_24) = U*/
  /*T(tmp_25) = U*/
  /*T(tmp_26) = U*/
  /*T(tmp_27) = U*/
  /*T(tmp_28) = U*/
  /*T(tmp_29) = U*/
  /*T(tmp_30) = U*/
  /*T(tmp_31) = U*/
  /*T(tmp_32) = U*/
  /*T(tmp_33) = U*/
  /*T(tmp_34) = U*/
  /*T(tmp_35) = U*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = U*/
  
  /*sid:34*/
  canary[1] = (char )'O';
  /*sid:35*/
  canary[2] = (char )'O';
  /*sid:36*/
  canary[3] = (char )'D';
  /*sid:37*/
  canary[4] = (char )'\000';
  /*sid:39*/
  if (result == (void *)0) {/*sid:40*/
    __retres = (char *)((void *)0);
    /*sid:40*/
    /*T(__retres) = G(result)*/
    
    /*sid:362*/
    goto return_label;}
  
  /*sid:43*/
  if (pathname == (void *)0) {/*sid:44*/
    *result = (char )'\000';
    /*sid:44*/
    /*T(result) = G(pathname) + G(result)*/
    
    /*sid:45*/
    __retres = (char *)((void *)0);
    /*sid:45*/
    /*T(__retres) = G(pathname) + G(result)*/
    
    /*sid:363*/
    goto return_label;}
  
  /*sid:47*/
  printf((char const   *)"MY_REALPATH: pathname passed in = %s\n", pathname);
  /*sid:47*/
  /*T(saved_sigmask) = G(pathname)*/
  /*T(block_sigmask) = G(pathname)*/
  /*T(delaying) = G(pathname)*/
  /*T(init_done) = G(pathname)*/
  
  /*sid:48*/
  strncpy((char *)(curpath), (char const   *)pathname, 46U);
  /*sid:49*/
  printf((char const   *)"canary=[%s]\n", canary);
  /*sid:49*/
  /*T(saved_sigmask) = U*/
  /*T(block_sigmask) = U*/
  /*T(delaying) = U*/
  /*T(init_done) = U*/
  
  /*sid:51*/
  if ((int const   )*pathname != '/')
  {/*sid:52*/
  tmp_0 = getcwd(workpath, 46U);
  /*sid:52*/
  /*T(tmp_0) = T*/
  
  /*sid:53*/
  if (! tmp_0) {/*sid:55*/
    userid_0 = geteuid();
    /*sid:55*/
    /*T(userid_0) = T*/
    
    /*sid:56*/
    delay_signaling();
    /*sid:57*/
    seteuid(0U);
    /*sid:58*/
    tmp = getcwd(workpath, 46U);
    /*sid:58*/
    /*T(tmp) = T*/
    
    /*sid:59*/
    if (! tmp) {/*sid:61*/
      strncpy((char *)result, (char const   *)".", (unsigned int )(46 + 1));
      /*sid:62*/
      seteuid(userid_0);
      /*sid:63*/
      enable_signaling();
      /*sid:64*/
      __retres = (char *)((void *)0);
      /*sid:64*/
      /*T(__retres) = T*/
      
      /*sid:364*/
      goto return_label;}
    
    /*sid:65*/
    seteuid(userid_0);
    /*sid:66*/
    enable_signaling();}
  }
  else {/*sid:67*/
  workpath[0] = (char )'\000';
  /*sid:67*/
  /*T(workpath) = G(pathname) + G(result)*/
  /*T(userid_0) = T*/
  /*T(tmp) = T*/
  /*T(tmp_0) = T*/
  }
  
  /*sid:68*/
  where = curpath;
  /*sid:68*/
  /*T(workpath) = G(pathname) + G(result)*/
  /*T(where) = T*/
  /*T(userid_0) = T*/
  /*T(tmp) = T*/
  
  /*sid:69*/
  while ((int )*where != '\000') {/*sid:73*/
    tmp_1 = strcmp((char const   *)where, ".");
    /*sid:74*/
    if (! tmp_1) {/*sid:76*/
      where ++;
      /*sid:77*/
      continue;}
    
    /*sid:78*/
    tmp_2 = strncmp((char const   *)where, "./", 2U);
    /*sid:78*/
    /*T(tmp_2) = G(pathname) + G(result)*/
    
    /*sid:79*/
    if (! tmp_2) {/*sid:81*/
      where += 2;
      /*sid:82*/
      continue;}
    
    /*sid:83*/
    tmp_3 = strncmp((char const   *)where, "../", 3U);
    /*sid:83*/
    /*T(tmp_3) = G(pathname) + G(result)*/
    
    /*sid:84*/
    if (! tmp_3) {/*sid:86*/
      where += 3;
      /*sid:87*/
      {/*sid:88*/
       last = workpath;
       /*sid:88*/
       /*T(last) = G(pathname) + G(result)*/
       
       /*sid:89*/
       ptr = last;
       /*sid:89*/
       /*T(ptr) = G(pathname) + G(result)*/
       }
      /*sid:90*/
      while ((int )*ptr != '\000') {/*sid:95*/
        if ((int )*ptr == '/') {/*sid:96*/
          last = ptr;}
        
        /*sid:98*/
        ptr ++;}
      
      /*sid:90*/
      /*T(ptr) = T*/
      /*T(last) = T*/
      /*T(tmp_2) = T*/
      /*T(tmp_3) = T*/
      
      /*sid:99*/
      *last = (char )'\000';
      /*sid:100*/
      continue;}
    
    /*sid:101*/
    ptr = strchr((char const   *)where, '/');
    /*sid:103*/
    if (ptr == (char *)((void *)0))
    {/*sid:104*/
    {/*sid:105*/
     tmp_4 = strlen((char const   *)where);
     /*sid:106*/
     ptr = (where + tmp_4) - 1;}}
    else {/*sid:107*/
    *ptr = (char )'\000';}
    
    /*sid:108*/
    tmp_5 = strlen((char const   *)(workpath));
    /*sid:108*/
    /*T(tmp_5) = G(pathname) + G(result)*/
    
    /*sid:109*/
    if (tmp_5 >= (size_t )46)
    {/*sid:110*/
    __retres = (char *)((void *)0);
    /*sid:110*/
    /*T(__retres) = G(pathname) + G(result)*/
    
    /*sid:365*/
    goto return_label;}
    else {/*sid:111*/
    strcpy((char *)(namebuf), (char const   *)(workpath));}
    
    /*sid:112*/
    last = namebuf;
    /*sid:112*/
    /*T(last) = G(pathname) + G(result)*/
    
    /*sid:113*/
    while (*last) {/*sid:117*/
      goto __Cont;
      /*sid:118*/
      __Cont: /* CIL Label */ ;
      /*sid:119*/
      last ++;}
    
    /*sid:113*/
    /*T(last) = T*/
    /*T(tmp_2) = T*/
    /*T(tmp_3) = T*/
    /*T(tmp_5) = T*/
    
    /*sid:121*/
    if (last == namebuf)
    {/*sid:122*/
    tmp_6 = strlen((char const   *)(namebuf));
    /*sid:122*/
    /*T(tmp_6) = G(pathname) + G(result)*/
    
    /*sid:123*/
    strncat((char *)(namebuf), (char const   *)"/",
            ((size_t )46 - tmp_6) - (size_t )1);
    /*sid:124*/
    printf((char const   *)"canary=[%s]\n", canary);
    /*sid:124*/
    /*T(saved_sigmask) = U*/
    /*T(block_sigmask) = U*/
    /*T(delaying) = U*/
    /*T(init_done) = U*/
    }
    else {/*sid:125*/
    {/*sid:126*/
     last --;
     /*sid:127*/
     }
    /*sid:128*/
    if ((int )*last != '/') {/*sid:129*/
      tmp_6 = strlen((char const   *)(namebuf));
      /*sid:130*/
      strncat((char *)(namebuf), (char const   *)"/",
              ((size_t )46 - tmp_6) - (size_t )1);
      /*sid:131*/
      printf((char const   *)"canary=[%s]\n", canary);}
    }
    
    /*sid:133*/
    tmp_7 = strlen((char const   *)(namebuf));
    /*sid:133*/
    /*T(tmp_6) = T*/
    /*T(tmp_7) = G(pathname) + G(result)*/
    /*T(saved_sigmask) = G(saved_sigmask)*/
    /*T(block_sigmask) = G(block_sigmask)*/
    /*T(delaying) = G(delaying)*/
    /*T(init_done) = G(init_done)*/
    
    /*sid:134*/
    strncat((char *)(namebuf), (char const   *)where,
            ((size_t )46 - tmp_7) - (size_t )1);
    /*sid:135*/
    printf((char const   *)"canary=[%s]\n", canary);
    /*sid:135*/
    /*T(saved_sigmask) = U*/
    /*T(block_sigmask) = U*/
    /*T(delaying) = U*/
    /*T(init_done) = U*/
    
    /*sid:136*/
    {/*sid:137*/
     tmp_8 = strlen((char const   *)(namebuf));
     /*sid:137*/
     /*T(tmp_8) = G(pathname) + G(result)*/
     
     /*sid:138*/
     tmp_9 = strlen((char const   *)where);}
    /*sid:139*/
    if (tmp_8 + tmp_9 >= (size_t )46) {/*sid:140*/
      printf((char const   *)"BUFFER OVERFLOW ATTEMPTED...exiting\n");
      /*sid:141*/
      __retres = (char *)((void *)0);
      /*sid:141*/
      /*T(__retres) = G(pathname) + G(result)*/
      
      /*sid:366*/
      goto return_label;}
    
    /*sid:143*/
    {/*sid:144*/
     ptr ++;
     /*sid:145*/
     where = ptr;}
    /*sid:146*/
    userid = geteuid();
    /*sid:146*/
    /*T(userid) = G(pathname) + G(result)*/
    
    /*sid:147*/
    delay_signaling();
    /*sid:148*/
    seteuid(0U);
    /*sid:149*/
    resultcode = stat((char const   *)(namebuf), (struct stat *)(& sbuf));
    /*sid:149*/
    /*T(resultcode) = G(pathname) + G(result)*/
    
    /*sid:150*/
    seteuid(userid);
    /*sid:151*/
    enable_signaling();
    /*sid:153*/
    if (resultcode == -1) {/*sid:155*/
      if (chroot_path == (void *)0)
      {/*sid:156*/
      tmp_10 = strlen((char const   *)(namebuf));
      /*sid:156*/
      /*T(tmp_10) = G(pathname) + G(chroot_path) + G(result)*/
      
      /*sid:157*/
      if (tmp_10 >= (size_t )46)
      {/*sid:158*/
      printf((char const   *)"BUFFER OVERFLOW ATTEMPTED...exiting\n");
      /*sid:159*/
      __retres = (char *)((void *)0);
      /*sid:159*/
      /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
      
      /*sid:367*/
      goto return_label;}
      else {/*sid:160*/
      strcpy((char *)result, (char const   *)(namebuf));
      /*sid:160*/
      /*T(result) = G(pathname) + G(result)*/
      
      /*sid:161*/
      printf((char const   *)"canary=[%s]\n", canary);}
      }
      else {/*sid:162*/
      tmp_17 = strlen((char const   *)chroot_path);
      /*sid:162*/
      /*T(tmp_17) = G(pathname) + G(chroot_path) + G(result)*/
      
      /*sid:163*/
      if (tmp_17 >= (size_t )46)
      {/*sid:164*/
      printf((char const   *)"BUFFER OVERFLOW ATTEMPTED...exiting\n");
      /*sid:165*/
      __retres = (char *)((void *)0);
      /*sid:165*/
      /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
      
      /*sid:368*/
      goto return_label;}
      else {/*sid:166*/
      strcpy((char *)result, (char const   *)chroot_path);
      /*sid:166*/
      /*T(result) = G(chroot_path)*/
      
      /*sid:167*/
      printf((char const   *)"canary=[%s]\n", canary);
      /*sid:169*/
      if ((int )namebuf[0] != '/')
      {/*sid:170*/
      {/*sid:171*/
       tmp_11 = strlen((char const   *)(namebuf));
       /*sid:171*/
       /*T(tmp_11) = G(pathname) + G(chroot_path) + G(result)*/
       
       /*sid:172*/
       tmp_12 = strlen((char const   *)result);
       /*sid:172*/
       /*T(tmp_12) = G(pathname) + G(chroot_path) + G(result)*/
       }
      /*sid:173*/
      if (tmp_11 + tmp_12 > (size_t )46)
      {/*sid:174*/
      printf((char const   *)"BUFFER OVERFLOW ATTEMPTED...exiting\n");
      /*sid:175*/
      __retres = (char *)((void *)0);
      /*sid:175*/
      /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
      
      /*sid:369*/
      goto return_label;}
      else {/*sid:176*/
      strcat((char *)result, (char const   *)(namebuf));
      /*sid:176*/
      /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
      
      /*sid:177*/
      printf((char const   *)"canary=[%s]\n", canary);}
      }
      else {/*sid:179*/
      if ((int )namebuf[1] != '\000') {/*sid:180*/
        ptr = result;
        /*sid:180*/
        /*T(ptr) = G(pathname) + G(chroot_path) + G(result)*/
        
        /*sid:181*/
        while ((int )*ptr != '\000') {/*sid:186*/
          ptr ++;}
        
        /*sid:181*/
        /*T(ptr) = T*/
        /*T(userid) = T*/
        /*T(resultcode) = T*/
        /*T(tmp_7) = T*/
        /*T(tmp_8) = T*/
        /*T(tmp_17) = T*/
        
        /*sid:188*/
        if (ptr == result) {/*sid:189*/
        goto _L;}
        else {/*sid:190*/
        {/*sid:191*/
         ptr --;
         /*sid:192*/
         }
        /*sid:193*/
        if ((int )*ptr != '/')
        {/*sid:194*/
        {/*sid:195*/
         _L: /* CIL Label */ 
         tmp_13 = strlen((char const   *)(namebuf));
         /*sid:195*/
         /*T(tmp_13) = G(pathname) + G(chroot_path) + G(result)*/
         
         /*sid:196*/
         tmp_14 = strlen((char const   *)result);
         /*sid:196*/
         /*T(tmp_14) = G(pathname) + G(chroot_path) + G(result)*/
         }
        /*sid:197*/
        if (tmp_13 + tmp_14 > (size_t )46)
        {/*sid:198*/
        printf((char const   *)"BUFFER OVERFLOW ATTEMPTED...exiting\n");
        /*sid:199*/
        __retres = (char *)((void *)0);
        /*sid:199*/
        /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
        
        /*sid:370*/
        goto return_label;}
        else {/*sid:200*/
        strcat((char *)result, (char const   *)(namebuf));
        /*sid:200*/
        /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
        
        /*sid:201*/
        printf((char const   *)"canary=[%s]\n", canary);}
        }
        else {/*sid:202*/
        {/*sid:203*/
         tmp_15 = strlen((char const   *)(namebuf));
         /*sid:203*/
         /*T(tmp_15) = T*/
         
         /*sid:204*/
         tmp_16 = strlen((char const   *)result);
         /*sid:204*/
         /*T(tmp_16) = T*/
         }
        /*sid:205*/
        if (tmp_15 + tmp_16 > (size_t )(46 + 1))
        {/*sid:206*/
        printf((char const   *)"BUFFER OVERFLOW ATTEMPTED...exiting\n");
        /*sid:207*/
        __retres = (char *)((void *)0);
        /*sid:207*/
        /*T(__retres) = T*/
        
        /*sid:371*/
        goto return_label;}
        else {/*sid:208*/
        strcat((char *)result, (char const   *)(& namebuf[1]));
        /*sid:208*/
        /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
        
        /*sid:209*/
        printf((char const   *)"canary=[%s]\n", canary);
        /*sid:209*/
        /*T(tmp_10) = G(pathname) + G(chroot_path) + G(result)*/
        /*T(tmp_11) = G(pathname) + G(chroot_path) + G(result)*/
        /*T(tmp_12) = G(pathname) + G(chroot_path) + G(result)*/
        /*T(tmp_13) = G(pathname) + G(chroot_path) + G(result)*/
        /*T(tmp_14) = G(pathname) + G(chroot_path) + G(result)*/
        }
        }
        }
        }
      }
      }
      }
      
      /*sid:211*/
      __retres = (char *)((void *)0);
      /*sid:211*/
      /*T(result) = G(chroot_path) + G(pathname) + G(result)*/
      /*T(userid) = T*/
      /*T(resultcode) = T*/
      /*T(tmp_7) = T*/
      /*T(tmp_8) = T*/
      /*T(tmp_10) = G(pathname) + G(chroot_path) + G(result)*/
      /*T(tmp_11) = G(pathname) + G(chroot_path) + G(result)*/
      /*T(tmp_12) = G(pathname) + G(chroot_path) + G(result)*/
      /*T(tmp_13) = G(pathname) + G(chroot_path) + G(result)*/
      /*T(tmp_14) = G(pathname) + G(chroot_path) + G(result)*/
      /*T(tmp_15) = T*/
      /*T(tmp_16) = T*/
      /*T(tmp_17) = T*/
      /*T(__retres) = T*/
      
      /*sid:372*/
      goto return_label;}
    
    /*sid:214*/
    if ((sbuf.st_mode & 16384U) == 16384U) {/*sid:215*/
      tmp_18 = strlen((char const   *)(namebuf));
      /*sid:215*/
      /*T(tmp_18) = G(pathname) + G(result)*/
      
      /*sid:216*/
      if (tmp_18 >= sizeof(workpath))
      {/*sid:217*/
      printf((char const   *)"strlen(namebuf) >= sizeof(workpath)\n");
      /*sid:218*/
      __retres = (char *)((void *)0);
      /*sid:218*/
      /*T(__retres) = G(pathname) + G(result)*/
      
      /*sid:373*/
      goto return_label;}
      else {/*sid:219*/
      strcpy((char *)(workpath), (char const   *)(namebuf));
      /*sid:220*/
      printf((char const   *)"canary=[%s]\n", canary);}
      
      /*sid:221*/
      continue;}
    
    /*sid:224*/
    if (*where)
    {/*sid:226*/
    if (chroot_path == (void *)0)
    {/*sid:227*/
    tmp_19 = strlen((char const   *)(namebuf));
    /*sid:227*/
    /*T(tmp_19) = T*/
    
    /*sid:228*/
    if (tmp_19 >= (size_t )46) {/*sid:229*/
      printf((char const   *)"strlen(namebuf) > MAXPATHLEN\n");
      /*sid:230*/
      __retres = (char *)((void *)0);
      /*sid:230*/
      /*T(__retres) = T*/
      
      /*sid:374*/
      goto return_label;}
    
    /*sid:232*/
    strcpy((char *)result, (char const   *)(namebuf));
    /*sid:232*/
    /*T(result) = G(pathname) + G(result)*/
    
    /*sid:233*/
    printf((char const   *)"canary=[%s]\n", canary);}
    else {/*sid:234*/
    tmp_20 = strlen((char const   *)chroot_path);
    /*sid:234*/
    /*T(tmp_20) = T*/
    
    /*sid:235*/
    if (tmp_20 >= (size_t )46) {/*sid:236*/
      printf((char const   *)"strlen(chroot_path) > MAXPATHLEN\n");
      /*sid:237*/
      __retres = (char *)((void *)0);
      /*sid:237*/
      /*T(__retres) = T*/
      
      /*sid:375*/
      goto return_label;}
    
    /*sid:239*/
    strcpy((char *)result, (char const   *)chroot_path);
    /*sid:239*/
    /*T(result) = G(chroot_path)*/
    
    /*sid:241*/
    if ((int )namebuf[0] != '/')
    {/*sid:242*/
    {/*sid:243*/
     tmp_21 = strlen((char const   *)(namebuf));
     /*sid:243*/
     /*T(tmp_21) = T*/
     
     /*sid:244*/
     tmp_22 = strlen((char const   *)result);
     /*sid:244*/
     /*T(tmp_22) = T*/
     }
    /*sid:245*/
    if (tmp_21 + tmp_22 > (size_t )46) {/*sid:246*/
      printf((char const   *)"strlen(namebuf) + strlen(result) > MAXPATHLEN\n");
      /*sid:247*/
      __retres = (char *)((void *)0);
      /*sid:247*/
      /*T(__retres) = T*/
      
      /*sid:376*/
      goto return_label;}
    
    /*sid:249*/
    strcat((char *)result, (char const   *)(namebuf));
    /*sid:249*/
    /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
    
    /*sid:250*/
    printf((char const   *)"canary=[%s]\n", canary);}
    else {/*sid:252*/
    if ((int )namebuf[1] != '\000') {/*sid:253*/
      ptr = result;
      /*sid:254*/
      while ((int )*ptr != '\000') {/*sid:259*/
        ptr ++;}
      
      /*sid:254*/
      /*T(userid) = T*/
      /*T(resultcode) = T*/
      /*T(tmp_7) = T*/
      /*T(tmp_8) = T*/
      
      /*sid:261*/
      if (ptr == result) {/*sid:262*/
      goto _L_0;}
      else {/*sid:263*/
      {/*sid:264*/
       ptr --;
       /*sid:265*/
       }
      /*sid:266*/
      if ((int )*ptr != '/')
      {/*sid:267*/
      {/*sid:268*/
       _L_0: /* CIL Label */ 
       tmp_23 = strlen((char const   *)(namebuf));
       /*sid:268*/
       /*T(tmp_23) = T*/
       
       /*sid:269*/
       tmp_24 = strlen((char const   *)result);
       /*sid:269*/
       /*T(tmp_24) = T*/
       }
      /*sid:270*/
      if (tmp_23 + tmp_24 > (size_t )46) {/*sid:271*/
        printf((char const   *)"strlen(namebuf) + strlen(result) > MAXPATHLEN\n");
        /*sid:272*/
        __retres = (char *)((void *)0);
        /*sid:272*/
        /*T(__retres) = T*/
        
        /*sid:377*/
        goto return_label;}
      
      /*sid:274*/
      strcat((char *)result, (char const   *)(namebuf));
      /*sid:274*/
      /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
      
      /*sid:275*/
      printf((char const   *)"canary=[%s]\n", canary);}
      else {/*sid:276*/
      {/*sid:277*/
       tmp_25 = strlen((char const   *)(namebuf));
       /*sid:277*/
       /*T(tmp_25) = T*/
       
       /*sid:278*/
       tmp_26 = strlen((char const   *)result);
       /*sid:278*/
       /*T(tmp_26) = T*/
       }
      /*sid:279*/
      if (tmp_25 + tmp_26 > (size_t )(46 + 1)) {/*sid:280*/
        printf((char const   *)"strlen(namebuf) + strlen(result) > MAXPATHLEN + 1\n");
        /*sid:281*/
        __retres = (char *)((void *)0);
        /*sid:281*/
        /*T(__retres) = T*/
        
        /*sid:378*/
        goto return_label;}
      
      /*sid:283*/
      strcat((char *)result, (char const   *)(& namebuf[1]));
      /*sid:283*/
      /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
      
      /*sid:284*/
      printf((char const   *)"canary=[%s]\n", canary);
      /*sid:284*/
      /*T(tmp_19) = T*/
      /*T(tmp_21) = T*/
      /*T(tmp_22) = T*/
      /*T(tmp_23) = T*/
      /*T(tmp_24) = T*/
      }
      }
      }
    }
    }
    
    /*sid:286*/
    __retres = (char *)((void *)0);
    /*sid:286*/
    /*T(result) = G(chroot_path) + G(pathname) + G(result)*/
    /*T(userid) = T*/
    /*T(resultcode) = T*/
    /*T(tmp_7) = T*/
    /*T(tmp_8) = T*/
    /*T(tmp_19) = T*/
    /*T(tmp_20) = T*/
    /*T(tmp_21) = T*/
    /*T(tmp_22) = T*/
    /*T(tmp_23) = T*/
    /*T(tmp_24) = T*/
    /*T(tmp_25) = T*/
    /*T(tmp_26) = T*/
    /*T(__retres) = T*/
    
    /*sid:379*/
    goto return_label;}
    else {/*sid:287*/
    tmp_27 = strlen((char const   *)(namebuf));
    /*sid:288*/
    if (tmp_27 >= sizeof(workpath)) {/*sid:289*/
      printf((char const   *)"strlen(namebuf) >= sizeof(workpath)\n");
      /*sid:290*/
      __retres = (char *)((void *)0);
      /*sid:290*/
      /*T(__retres) = T*/
      
      /*sid:380*/
      goto return_label;}
    
    /*sid:292*/
    strcpy((char *)(workpath), (char const   *)(namebuf));
    /*sid:293*/
    printf((char const   *)"canary=[%s]\n", canary);
    /*sid:293*/
    /*T(userid) = T*/
    /*T(resultcode) = T*/
    /*T(tmp_7) = T*/
    /*T(tmp_8) = T*/
    /*T(saved_sigmask) = G(saved_sigmask)*/
    /*T(block_sigmask) = G(block_sigmask)*/
    /*T(delaying) = G(delaying)*/
    /*T(init_done) = G(init_done)*/
    }
    }
  
  /*sid:69*/
  /*T(namebuf) = G(pathname) + G(result)*/
  /*T(ptr) = T*/
  /*T(last) = T*/
  /*T(userid) = T*/
  /*T(resultcode) = T*/
  /*T(tmp_1) = T*/
  /*T(tmp_2) = T*/
  /*T(tmp_3) = T*/
  /*T(tmp_4) = T*/
  /*T(tmp_5) = T*/
  /*T(tmp_6) = T*/
  /*T(tmp_7) = T*/
  /*T(tmp_8) = T*/
  /*T(tmp_9) = T*/
  /*T(tmp_18) = T*/
  /*T(tmp_27) = T*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  
  /*sid:295*/
  if (chroot_path == (void *)0)
  {/*sid:296*/
  tmp_28 = strlen((char const   *)(workpath));
  /*sid:296*/
  /*T(tmp_28) = G(pathname) + G(chroot_path) + G(result)*/
  
  /*sid:297*/
  if (tmp_28 >= (size_t )46) {/*sid:298*/
    printf((char const   *)"strlen(workpath) > MAXPATHLEN!\n");
    /*sid:299*/
    __retres = (char *)((void *)0);
    /*sid:299*/
    /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
    
    /*sid:381*/
    goto return_label;}
  
  /*sid:301*/
  strcpy((char *)result, (char const   *)(workpath));
  /*sid:301*/
  /*T(result) = G(pathname) + G(result)*/
  
  /*sid:302*/
  printf((char const   *)"canary=[%s]\n", canary);
  /*sid:302*/
  /*T(saved_sigmask) = U*/
  /*T(block_sigmask) = U*/
  /*T(delaying) = U*/
  /*T(init_done) = U*/
  }
  else {/*sid:303*/
  tmp_29 = strlen((char const   *)chroot_path);
  /*sid:303*/
  /*T(tmp_29) = G(pathname) + G(chroot_path) + G(result)*/
  
  /*sid:304*/
  if (tmp_29 >= (size_t )46) {/*sid:305*/
    printf((char const   *)"strlen(chroot_path) >= MAXPATHLEN\n");
    /*sid:306*/
    __retres = (char *)((void *)0);
    /*sid:306*/
    /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
    
    /*sid:382*/
    goto return_label;}
  
  /*sid:308*/
  strcpy((char *)result, (char const   *)chroot_path);
  /*sid:308*/
  /*T(result) = G(chroot_path)*/
  
  /*sid:309*/
  printf((char const   *)"canary=[%s]\n", canary);
  /*sid:309*/
  /*T(saved_sigmask) = U*/
  /*T(block_sigmask) = U*/
  /*T(delaying) = U*/
  /*T(init_done) = U*/
  
  /*sid:311*/
  if ((int )workpath[0] != '/')
  {/*sid:312*/
  {/*sid:313*/
   tmp_30 = strlen((char const   *)(workpath));
   /*sid:313*/
   /*T(tmp_30) = G(pathname) + G(chroot_path) + G(result)*/
   
   /*sid:314*/
   tmp_31 = strlen((char const   *)result);
   /*sid:314*/
   /*T(tmp_31) = G(pathname) + G(chroot_path) + G(result)*/
   }
  /*sid:315*/
  if (tmp_30 + tmp_31 > (size_t )46) {/*sid:316*/
    printf((char const   *)"strlen(workpath) + strlen(result) > MAXPATHLEN\n");
    /*sid:317*/
    __retres = (char *)((void *)0);
    /*sid:317*/
    /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
    
    /*sid:383*/
    goto return_label;}
  
  /*sid:319*/
  strcat((char *)result, (char const   *)(workpath));
  /*sid:319*/
  /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
  
  /*sid:320*/
  printf((char const   *)"canary=[%s]\n", canary);}
  else {/*sid:322*/
  if ((int )workpath[1] != '\000') {/*sid:323*/
    ptr = result;
    /*sid:323*/
    /*T(ptr) = G(pathname) + G(chroot_path) + G(result)*/
    
    /*sid:324*/
    while ((int )*ptr != '\000') {/*sid:329*/
      ptr ++;}
    
    /*sid:324*/
    /*T(ptr) = T*/
    /*T(tmp_29) = T*/
    
    /*sid:331*/
    if (ptr == result) {/*sid:332*/
    goto _L_1;}
    else {/*sid:333*/
    {/*sid:334*/
     ptr --;
     /*sid:335*/
     }
    /*sid:336*/
    if ((int )*ptr != '/')
    {/*sid:337*/
    {/*sid:338*/
     _L_1: /* CIL Label */ 
     tmp_32 = strlen((char const   *)(workpath));
     /*sid:338*/
     /*T(tmp_32) = G(pathname) + G(chroot_path) + G(result)*/
     
     /*sid:339*/
     tmp_33 = strlen((char const   *)result);
     /*sid:339*/
     /*T(tmp_33) = G(pathname) + G(chroot_path) + G(result)*/
     }
    /*sid:340*/
    if (tmp_32 + tmp_33 > (size_t )46) {/*sid:341*/
      printf((char const   *)"strlen(workpath) + strlen(result) > MAXPATHLEN\n");
      /*sid:342*/
      __retres = (char *)((void *)0);
      /*sid:342*/
      /*T(__retres) = G(pathname) + G(chroot_path) + G(result)*/
      
      /*sid:384*/
      goto return_label;}
    
    /*sid:344*/
    strcat((char *)result, (char const   *)(workpath));
    /*sid:344*/
    /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
    
    /*sid:345*/
    printf((char const   *)"canary=[%s]\n", canary);}
    else {/*sid:346*/
    {/*sid:347*/
     tmp_34 = strlen((char const   *)(workpath));
     /*sid:347*/
     /*T(tmp_34) = T*/
     
     /*sid:348*/
     tmp_35 = strlen((char const   *)result);
     /*sid:348*/
     /*T(tmp_35) = T*/
     }
    /*sid:349*/
    if (tmp_34 + tmp_35 > (size_t )(46 + 1)) {/*sid:350*/
      printf((char const   *)"strlen(workpath) + strlen(result) > MAXPATHLEN + 1\n");
      /*sid:351*/
      __retres = (char *)((void *)0);
      /*sid:351*/
      /*T(__retres) = T*/
      
      /*sid:385*/
      goto return_label;}
    
    /*sid:353*/
    strcat((char *)result, (char const   *)(& workpath[1]));
    /*sid:353*/
    /*T(result) = G(result) + G(pathname) + G(chroot_path)*/
    
    /*sid:354*/
    printf((char const   *)"canary=[%s]\n", canary);
    /*sid:354*/
    /*T(tmp_28) = G(pathname) + G(chroot_path) + G(result)*/
    /*T(tmp_30) = G(pathname) + G(chroot_path) + G(result)*/
    /*T(tmp_31) = G(pathname) + G(chroot_path) + G(result)*/
    /*T(tmp_32) = G(pathname) + G(chroot_path) + G(result)*/
    /*T(tmp_33) = G(pathname) + G(chroot_path) + G(result)*/
    }
    }
    }
  }
  }
  
  /*sid:356*/
  __retres = result;
  /*sid:356*/
  /*T(result) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_10) = T*/
  /*T(tmp_11) = T*/
  /*T(tmp_12) = T*/
  /*T(tmp_13) = T*/
  /*T(tmp_14) = T*/
  /*T(tmp_15) = T*/
  /*T(tmp_16) = T*/
  /*T(tmp_17) = T*/
  /*T(tmp_19) = T*/
  /*T(tmp_20) = T*/
  /*T(tmp_21) = T*/
  /*T(tmp_22) = T*/
  /*T(tmp_23) = T*/
  /*T(tmp_24) = T*/
  /*T(tmp_25) = T*/
  /*T(tmp_26) = T*/
  /*T(tmp_28) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_29) = T*/
  /*T(tmp_30) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_31) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_32) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_33) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_34) = T*/
  /*T(tmp_35) = T*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = T*/
  
  /*sid:386*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:386*/
  /*T(my_realpath) = T*/
  /*T(result) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(workpath) = G(pathname) + G(result)*/
  /*T(namebuf) = G(pathname) + G(result)*/
  /*T(where) = T*/
  /*T(ptr) = T*/
  /*T(last) = T*/
  /*T(userid) = T*/
  /*T(resultcode) = T*/
  /*T(userid_0) = T*/
  /*T(tmp) = T*/
  /*T(tmp_0) = T*/
  /*T(tmp_1) = T*/
  /*T(tmp_2) = T*/
  /*T(tmp_3) = T*/
  /*T(tmp_4) = T*/
  /*T(tmp_5) = T*/
  /*T(tmp_6) = T*/
  /*T(tmp_7) = T*/
  /*T(tmp_8) = T*/
  /*T(tmp_9) = T*/
  /*T(tmp_10) = T*/
  /*T(tmp_11) = T*/
  /*T(tmp_12) = T*/
  /*T(tmp_13) = T*/
  /*T(tmp_14) = T*/
  /*T(tmp_15) = T*/
  /*T(tmp_16) = T*/
  /*T(tmp_17) = T*/
  /*T(tmp_18) = T*/
  /*T(tmp_19) = T*/
  /*T(tmp_20) = T*/
  /*T(tmp_21) = T*/
  /*T(tmp_22) = T*/
  /*T(tmp_23) = T*/
  /*T(tmp_24) = T*/
  /*T(tmp_25) = T*/
  /*T(tmp_26) = T*/
  /*T(tmp_27) = T*/
  /*T(tmp_28) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_29) = T*/
  /*T(tmp_30) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_31) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_32) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_33) = G(pathname) + G(chroot_path) + G(result)*/
  /*T(tmp_34) = T*/
  /*T(tmp_35) = T*/
  /*T(saved_sigmask) = G(saved_sigmask)*/
  /*T(block_sigmask) = G(block_sigmask)*/
  /*T(delaying) = G(delaying)*/
  /*T(init_done) = G(init_done)*/
  /*T(__retres) = T*/
  }

}
