/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

extern int printf(char const   * __restrict  __format  , ...) ;
void test(char *str ) 
{ char buf[40] ;
  char *p ;
  char *tmp ;
  char tmp_0 ;
  char *tmp_1 ;
  
  {/*sid:1*/
  p = buf;
  /*sid:1*/
  /*T(str) = G(str)*/
  /*T(buf) = U*/
  /*T(p) = U*/
  /*T(tmp) = U*/
  /*T(tmp_0) = U*/
  /*T(tmp_1) = U*/
  /*T(test) = G(str)*/
  
  /*sid:2*/
  while (1) {/*sid:3*/
    {/*sid:4*/
     {/*sid:5*/
     tmp = p;
     /*sid:6*/
     p ++;}
     
     /*sid:4*/
     /*T(tmp) = U*/
     
     /*sid:7*/
     {/*sid:8*/
     tmp_1 = str;
     /*sid:9*/
     str ++;
     /*sid:10*/
     tmp_0 = *tmp_1;}
     
     /*sid:11*/
     *tmp = tmp_0;
     /*sid:11*/
     /*T(tmp) = G(str)*/
     }
    /*sid:12*/
    if (! tmp_0) {/*sid:13*/
      break;}
    
    /*sid:14*/
    continue;}
  
  /*sid:2*/
  /*T(tmp) = G(str)*/
  /*T(tmp_0) = G(str)*/
  /*T(tmp_1) = G(str)*/
  
  /*sid:15*/
  printf((char const   *)"result: %s\n", buf);
  /*sid:23*/
  return;
  /*sid:23*/
  /*T(test) = U*/
  }

}
int main(int argc , char **argv ) 
{ char *userstr ;
  int __retres ;
  
  {/*sid:18*/
  if (argc > 1) {/*sid:19*/
    userstr = *(argv + 1);
    /*sid:19*/
    /*T(userstr) = G(argv) + G(argc)*/
    
    /*sid:20*/
    test(userstr);}
  
  /*sid:18*/
  /*T(argc) = G(argc)*/
  /*T(argv) = G(argv)*/
  /*T(userstr) = U*/
  /*T(__retres) = U*/
  /*T(main) = G(argc) + G(argv)*/
  
  /*sid:22*/
  __retres = 0;
  /*sid:22*/
  /*T(userstr) = G(argv) + G(argc)*/
  
  /*sid:24*/
  return (__retres);
  /*sid:24*/
  /*T(main) = U*/
  }

}
