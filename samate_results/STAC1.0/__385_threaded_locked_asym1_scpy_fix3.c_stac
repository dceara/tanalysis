/* Generated by CIL v. 1.3.6 */
/* print_CIL_Input is false */

typedef unsigned int size_t;
typedef unsigned long pthread_t;
union __anonunion_pthread_attr_t_4 {
   char __size[36] ;
   long __align ;
};
typedef union __anonunion_pthread_attr_t_4 pthread_attr_t;
struct __pthread_internal_slist {
   struct __pthread_internal_slist *__next ;
};
typedef struct __pthread_internal_slist __pthread_slist_t;
union __anonunion___6 {
   int __spins ;
   __pthread_slist_t __list ;
};
struct __pthread_mutex_s {
   int __lock ;
   unsigned int __count ;
   int __owner ;
   int __kind ;
   unsigned int __nusers ;
   union __anonunion___6 __annonCompField1 ;
};
union __anonunion_pthread_mutex_t_5 {
   struct __pthread_mutex_s __data ;
   char __size[24] ;
   long __align ;
};
typedef union __anonunion_pthread_mutex_t_5 pthread_mutex_t;
extern  __attribute__((__nothrow__)) int pthread_create(pthread_t * __restrict  __newthread ,
                                                        pthread_attr_t const   * __restrict  __attr ,
                                                        void *(*__start_routine)(
                                                        void * ) ,
                                                        void * __restrict  __arg )  __attribute__((__nonnull__(1,3))) ;
extern  __attribute__((__noreturn__)) void pthread_exit(void *__retval ) ;
extern int pthread_join(pthread_t __th , void **__thread_return ) ;
extern  __attribute__((__nothrow__)) int pthread_mutex_lock(pthread_mutex_t *__mutex )  __attribute__((__nonnull__(1))) ;
extern  __attribute__((__nothrow__)) int pthread_mutex_unlock(pthread_mutex_t *__mutex )  __attribute__((__nonnull__(1))) ;
extern int printf(char const   * __restrict  __format  , ...) ;
extern  __attribute__((__nothrow__)) char *strcpy(char * __restrict  __dest ,
                                                  char const   * __restrict  __src )  __attribute__((__nonnull__(1,2))) ;
extern  __attribute__((__nothrow__)) size_t strlen(char const   *__s )  __attribute__((__pure__,
__nonnull__(1))) ;
pthread_mutex_t mut  = {{0, 0U, 0, 0, 0U, {0}}};
char *shortstr(char *p , int n , int targ ) 
{ char *tmp ;
  char *__retres ;
  
  {/*sid:2*/
  if (n > targ) {/*sid:3*/
    tmp = shortstr(p + 1, n - 1, targ);
    /*sid:3*/
    /*T(tmp) = G(mut) + G(p) + G(n) + G(targ)*/
    
    /*sid:4*/
    __retres = tmp;
    /*sid:4*/
    /*T(__retres) = G(p) + G(mut) + G(n) + G(targ)*/
    
    /*sid:33*/
    goto return_label;}
  
  /*sid:2*/
  /*T(shortstr) = G(targ) + G(p) + G(n) + G(mut)*/
  /*T(mut) = G(mut)*/
  /*T(p) = G(p)*/
  /*T(n) = G(n)*/
  /*T(targ) = G(targ)*/
  /*T(tmp) = U*/
  /*T(__retres) = U*/
  
  /*sid:6*/
  __retres = p;
  /*sid:6*/
  /*T(tmp) = G(mut) + G(p) + G(n) + G(targ)*/
  /*T(__retres) = G(p) + G(mut) + G(n) + G(targ)*/
  
  /*sid:34*/
  return_label: /* CIL Label */ 
  return (__retres);}

}
void *foo(void *targ ) 
{ char *buffer ;
  char *str ;
  char *str2 ;
  size_t tmp ;
  void *__retres ;
  
  {/*sid:8*/
  buffer = *((char **)targ + 0);
  /*sid:8*/
  /*T(foo) = G(targ) + G(mut)*/
  /*T(mut) = G(mut)*/
  /*T(targ) = G(targ)*/
  /*T(buffer) = G(targ)*/
  /*T(str) = U*/
  /*T(str2) = U*/
  /*T(tmp) = U*/
  /*T(__retres) = U*/
  
  /*sid:10*/
  str = *((char **)targ + 1);
  /*sid:10*/
  /*T(str) = G(targ)*/
  
  /*sid:11*/
  pthread_mutex_lock(& mut);
  /*sid:12*/
  tmp = strlen((char const   *)str);
  /*sid:12*/
  /*T(tmp) = G(targ)*/
  
  /*sid:13*/
  str2 = shortstr(str, (int )tmp, 5 - 1);
  /*sid:13*/
  /*T(str2) = G(mut) + G(targ)*/
  
  /*sid:14*/
  strcpy((char *)buffer, (char const   *)str2);
  /*sid:14*/
  /*T(buffer) = G(mut) + G(targ)*/
  
  /*sid:15*/
  printf((char const   *)"result: %s\n", buffer);
  /*sid:15*/
  /*T(mut) = G(mut) + G(targ)*/
  
  /*sid:16*/
  pthread_mutex_unlock(& mut);
  /*sid:17*/
  pthread_exit((void *)0);
  /*sid:35*/
  return (__retres);
  /*sid:35*/
  /*T(foo) = G(targ) + G(mut)*/
  /*T(mut) = G(mut)*/
  /*T(targ) = G(targ)*/
  /*T(buffer) = U*/
  /*T(str) = U*/
  /*T(str2) = U*/
  /*T(tmp) = U*/
  /*T(__retres) = U*/
  }

}
void *bar(void *targ ) 
{ char **buffer ;
  void *__retres ;
  
  {/*sid:19*/
  buffer = (char **)targ;
  /*sid:19*/
  /*T(bar) = G(targ) + G(mut)*/
  /*T(mut) = G(mut)*/
  /*T(targ) = G(targ)*/
  /*T(buffer) = G(targ)*/
  /*T(__retres) = U*/
  
  /*sid:20*/
  *buffer = (char *)((void *)0);
  /*sid:21*/
  pthread_exit((void *)0);
  /*sid:36*/
  return (__retres);
  /*sid:36*/
  /*T(bar) = G(targ) + G(mut)*/
  /*T(mut) = G(mut)*/
  /*T(targ) = G(targ)*/
  /*T(buffer) = U*/
  /*T(__retres) = U*/
  }

}
int main(int argc , char **argv ) 
{ char buf[5] ;
  pthread_t tids[2] ;
  char *tin[2] ;
  int rc ;
  int __retres ;
  
  {/*sid:22*/
  tin[0] = buf;
  /*sid:22*/
  /*T(main) = G(argv) + G(argc) + G(mut)*/
  /*T(mut) = G(mut)*/
  /*T(argc) = G(argc)*/
  /*T(argv) = G(argv)*/
  /*T(buf) = U*/
  /*T(tids) = U*/
  /*T(tin) = U*/
  /*T(rc) = U*/
  /*T(__retres) = U*/
  
  /*sid:24*/
  if (argc > 1)
  {/*sid:25*/
  tin[1] = *(argv + 1);
  /*sid:25*/
  /*T(tin) = G(argv) + G(argc)*/
  }
  else {/*sid:26*/
  __retres = 0;
  /*sid:26*/
  /*T(__retres) = G(argc)*/
  
  /*sid:37*/
  goto return_label;}
  
  /*sid:27*/
  rc = pthread_create((pthread_t *)(tids),
                      (pthread_attr_t const   *)((void *)0), & foo,
                      (void *)((void *)(tin)));
  /*sid:27*/
  /*T(rc) = T*/
  
  /*sid:28*/
  rc = pthread_create((pthread_t *)(& tids[1]),
                      (pthread_attr_t const   *)((void *)0), & bar,
                      (void *)((void *)(& buf)));
  /*sid:29*/
  pthread_join(tids[0], (void **)((void *)0));
  /*sid:30*/
  pthread_join(tids[1], (void **)((void *)0));
  /*sid:31*/
  printf((char const   *)"final string: %s \n", buf);
  /*sid:31*/
  /*T(mut) = U*/
  
  /*sid:32*/
  __retres = 0;
  /*sid:32*/
  /*T(mut) = G(mut)*/
  /*T(__retres) = G(argc)*/
  
  /*sid:38*/
  return_label: /* CIL Label */ 
  return (__retres);
  /*sid:38*/
  /*T(main) = G(argc)*/
  /*T(tin) = G(argv) + G(argc)*/
  /*T(rc) = T*/
  }

}
